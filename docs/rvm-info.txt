HOMEBREW INSTALL:

	sudo mkdir /usr/local
	sudo chown -R $USER /usr/local 
	
	(one line)
	
	ruby -e "$(curl -fsSL https://gist.github.com/raw/323731/install_homebrew.rb)"


RVM INSTALL:

	$ bash < <( curl http://rvm.beginrescueend.com/releases/rvm-install-head )
	
	Insert in .profile:  [[ -s "$HOME/.rvm/scripts/rvm" ]] && . "$HOME/.rvm/scripts/rvm"  # This loads RVM into a shell session.
	System Wide Install:  [[ -s "/usr/local/lib/rvm" ]] && . "/usr/local/lib/rvm"  # This loads RVM into a shell session.
	
	
	
To seamlessly abandon the Apple-installed system ruby (ruby 1.8.7 patchlevel 174 for Snow Leopard):

    rvm install 1.8.7 # installs patch 302: closest supported version
    rvm system ; rvm gemset export system.gems ; rvm 1.8.7 ; rvm gemset import system # migrate your gems
    rvm --default 1.8.7


Dev Server GEMS:

	abstract-1.0.0      activerecord-2.3.8    arel-1.0.1        ffi-0.6.3         pg-0.9.0           rails-2.3.8         	thor-0.14.3
	actionmailer-2.3.8  activerecord-3.0.1    builder-2.1.2     i18n-0.4.1        polyglot-0.3.1     rails-3.0.1         	treetop-1.4.8
	actionmailer-3.0.1  activeresource-2.3.8  bundler-1.0.3     mail-2.2.7        rack-1.1.0         railties-3.0.1      	tzinfo-0.3.23
	actionpack-2.3.8    activeresource-3.0.1  erubis-2.6.6      mime-types-1.16   rack-1.2.1         rake-0.8.7
	actionpack-3.0.1    activesupport-2.3.8   fastercsv-1.5.3   mysql-2.8.1       rack-mount-0.6.13  sqlite-ruby-2.2.3
	activemodel-3.0.1   activesupport-3.0.1   fastthread-1.0.7  passenger-2.2.15  rack-test-0.5.6    	sqlite3-		ruby-1.3.1


	LOCAL DEV INSTALL INSTRUCTIONS:

		rvm install ree-1.8.7-2010.02


RVM INSTALL RUBIES ON LION

	rvm install 1.9.3-p125 --with-readline-dir=$rvm_path/usr --with-openssl-dir=$rvm_path/usr --with-tcl-lib=/usr --with-tk-lib=/usr


MYSQL INSTALL (BREW)

	brew install mysql
	
	Set up databases with:
	    unset TMPDIR
	    mysql_install_db
	
	launchctl load -w /usr/local/Cellar/mysql/5.1.43/com.mysql.mysqld.plist  #auto launch on login


	If this is your first install, automatically load on login with:
	    cp /usr/local/Cellar/mysql/5.1.53/com.mysql.mysqld.plist ~/Library/LaunchAgents
	    launchctl load -w ~/Library/LaunchAgents/com.mysql.mysqld.plist
	
	If this is an upgrade and you already have the com.mysql.mysqld.plist loaded:
	    launchctl unload -w ~/Library/LaunchAgents/com.mysql.mysqld.plist
	    cp /usr/local/Cellar/mysql/5.1.53/com.mysql.mysqld.plist ~/Library/LaunchAgents
	    launchctl load -w ~/Library/LaunchAgents/com.mysql.mysqld.plist
	
	Note on upgrading:
	    We overwrite any existing com.mysql.mysqld.plist in ~/Library/LaunchAgents
	    if we are upgrading because previous versions of this brew created the
	    plist with a version specific program argument.
	
	Or start manually with:
	    mysql.server start

	To start mysqld at boot time you have to copy
	support-files/mysql.server to the right place for your system
	
	PLEASE REMEMBER TO SET A PASSWORD FOR THE MySQL root USER !
	To do so, start the server, then issue the following commands:
	
	/usr/local/Cellar/mysql/5.1.53/bin/mysqladmin -u root password 'new-password'
	/usr/local/Cellar/mysql/5.1.53/bin/mysqladmin -u root -h Stargate.local password 'new-password'
	
	Alternatively you can run:
	/usr/local/Cellar/mysql/5.1.53/bin/mysql_secure_installation
	
	which will also give you the option of removing the test
	databases and anonymous user created by default.  This is
	strongly recommended for production servers.
	
	See the manual for more instructions.
	
	You can start the MySQL daemon with:
	cd /usr/local/Cellar/mysql/5.1.54 ; /usr/local/Cellar/mysql/5.1.54/bin/mysqld_safe &
	
	You can test the MySQL daemon with mysql-test-run.pl
	cd /usr/local/Cellar/mysql/5.1.54/mysql-test ; perl mysql-test-run.pl
	
	Please report any problems with the /usr/local/Cellar/mysql/5.1.54/bin/mysqlbug script!

