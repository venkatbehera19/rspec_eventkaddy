def add_basic_info sheet, survey, event
  sheet.add_row ["#{event.name}"],        style: @black_cell, :height => 30
  sheet.add_row ["#{survey.title}"],       style: @black_cell, :height => 30
  sheet.add_row ["#{survey.description}"], style: @black_cell, :height => 80
end

def add_headers sheet, questions
  style = []
  heads = [ 'Registration ID', 'Attendee Name', 'Email', 'Phone Number','Title', 'Custom Field 1', 'Custom Field 2' ]
  questions.map {|q| heads << q }
  heads << "Response Last Updated At"
  heads << "(Local Time) Response Last Updated At"
  heads.each {|h| style << @black_cell }
  sheet.add_row heads, :style => style
end

wb.styles do |style|
  @black_cell = style.add_style :bg_color => "00", :fg_color => "FF", :sz => 14, :alignment => { wrap_text: true, :horizontal=> :left }
  @bold_cell  = style.add_style :sz => 16
end

utc_offset = Event.find( event.id ).utc_offset || "+00:00"

created_at_dates = SurveyResponse.where(survey_id: Survey.where(event_id:event.id, survey_type_id: survey_type_id).ids).group("date(created_at)").pluck("date(created_at)")
p created_at_dates
#p Survey.where(event_id:event.id, survey_type_id: survey_type_id).joins(:survey_responses).where("date(survey_responses.created_at) in (?)", created_at_dates).distinct.select(:title)
created_at_dates.each do |created_at_date|
  Survey.where(event_id:event.id, survey_type_id: survey_type_id).joins(:survey_responses).where("date(survey_responses.created_at) = ?", created_at_date).distinct.each do |survey|

    # 31 is the max number of characters in a sheet name
    wb.add_worksheet( name: survey.title.truncate(10) + created_at_date.to_s(10)) do |sheet|

      add_basic_info sheet, survey, event

      question_ids = []
      questions    = []
      questions_type_ids    = []
      survey.questions.order('questions.survey_section_id, questions.order').each {|q| questions << q.question; question_ids << q.id; questions_type_ids << q.question_type_id }

      survey_responses = SurveyResponse.where(event_id:event.id, survey_id: survey.id).where("date(created_at) = ?", created_at_date).order('attendee_id')

      # if survey_responses.length > 0
        sheet.add_row []
        add_headers sheet, questions
      # end

      survey_responses.each do |sr|

        attendee  = Attendee.find(sr.attendee_id)
        responses = sr.responses
        row       = [ attendee.account_code, attendee.full_name, attendee.email, attendee.mobile_phone, attendee.title, attendee.custom_fields_1, attendee.custom_fields_2 ]

        unless responses.blank?

          row.concat Answer.answers_as_array( question_ids, responses, questions_type_ids )
          row << sr.updated_at.to_s
          row << Time.parse("#{sr.updated_at.strftime('%Y-%m-%d %H:%M:%S')}Z").localtime(utc_offset).to_s
        end

        sheet.add_row row
      end
      sheet.column_widths 100
    end
  end
end

