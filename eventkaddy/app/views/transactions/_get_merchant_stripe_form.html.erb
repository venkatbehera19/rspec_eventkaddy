<% if @error_message %>
  <p><%= @error_message %></p>
<% else %>
  <%= form_for :transaction, url: "/#{params[:event_id]}/registrations/payment/create_checkout_session_stripe", :html => {id: "payment-form"} do |f| %>
    <%= f.hidden_field :attendee_slug, :value => params[:id] %>
    <%= f.hidden_field :id, :value => @transaction.id %>
    <%= hidden_field_tag 'transaction[register_form]', @register_form.id %>
    <% show_memberhsip_field = ["aafp_member", "aafp_non_member", "aafp_retired"].include?(@transaction.product.iid)%>
    <div class="form-group">
      <%= text_field_tag 'transaction[membership_id]', nil, placeholder: 'Enter Membership ID', class: 'form-control', disabled: !show_memberhsip_field%>
    </div>
    <div id="payment-element">

    </div>
    <%= f.submit "Pay now", class:"btn btn-primary", id: "submit" %>
    <div class="spinner hidden" id="spinner"></div>
    <div id="payment-message" class="hidden"></div>
  <% end %>
<% end %>

<script>
  const stripe = Stripe('<%= @stripe_env %>');

  let elements;

  initialize();

  document
    .querySelector("#payment-form")
    .addEventListener("submit", handleSubmit);

  // Fetches a payment intent and captures the client secret

  function initialize(){
    return $.post("/orders/stripe/create_payment", $('#payment-form').serialize())
        .then(function(data) {
          clientSecret = data.clientSecret
          
          const appearance = {
            theme: 'stripe',
          };

          elements = stripe.elements({ appearance, clientSecret });

          const paymentElementOptions = {
            layout: "tabs",
          };

          const paymentElement = elements.create("payment", paymentElementOptions);
          paymentElement.mount("#payment-element");
        })
        .catch(function(response) {
          showMessage(response.responseJSON.error)
        })
  }

  function handleSubmit(e) {
    e.preventDefault();
    setLoading(true);
    memId = $('#transaction_membership_id').val()
    registerFormId = $('#transaction_register_form').val()
    return stripe.confirmPayment({
      elements,
      confirmParams: {
        return_url: `${window.location.origin}/orders/stripe/complete_payment?memId=${memId}&registerFormId=${registerFormId}`,
      },
    })
    .then(function (data){
      if (data.error){
        showMessage(data.error.message)
        setLoading(false);
      }
    })
    .catch(function (response) {
      showMessage(response)
    })
  }

  // ------- UI helpers -------

  function showMessage(messageText) {
    const messageContainer = document.querySelector("#payment-message");

    messageContainer.classList.remove("hidden");
    messageContainer.textContent = messageText;

    setTimeout(function () {
      messageContainer.classList.add("hidden");
      messageText.textContent = "";
    }, 4000);
  }

  // Show a spinner on payment submission
  function setLoading(isLoading) {
    if (isLoading) {
      // Disable the button and show a spinner
      document.querySelector("#submit").disabled = true;
    } else {
      document.querySelector("#submit").disabled = false;
    }
  }
</script>