#+TITLE: Times and Dates

* Preamble
This is among the most difficult and confusing parts of Event Kaddy, and so it deserves a little attention. At the time of writing, our times and dates are always saved as date and time type columns in mysql. To our frustration, these never save timezone information, and so they will always be assumed to be in UTC +00:00. Generally the correct practice is to convert a local time to UTC, save it, and when retrieving it reconvert it back to the local time (which would make looking at the database times a little confusing, but managing the data easier). Our practice has been to save the local time and ignore the fact that it is in UTC. This makes the data easier to look at in Sequel Pro, but has a large drawback that every Time parser will always attempt to convert it to a local time and thus incorrectly adjust it, thinking it was retrieving the time in UTC. This is a legacy problem that, because it defies the aforementioned convention, causes us to constantly reinvent parsers and figure out ways to convince our programs to treat the UTC time as the local time.

For the actual timezone of an event, we save a value in events.utc_offset. This however is not utilized for sessions, surveys, or most tables involving time. It is used specifically for notifications to calculate the local_time field, so that the active_time field can be the true UTC time of the notification when it is compared to the server time of the cron task script that sends notifications.

Thus it is important to tread carefully when dealing with anything involving parsing time values from the database in our app, and test thoroughly by manually altering the timezone of the computer and thinking carefully about what values are supposed to occur in different timezones. It is unfortunately very easy to confuse yourself into thinking a correct value is incorrect, or vice versa.
